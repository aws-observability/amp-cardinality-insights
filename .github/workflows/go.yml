# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  getDirs:
    name: get code directories
    runs-on: ubuntu-latest
    environment: Observability Test
    if: github.repository == 'aws-observability/amp-cardinality-insights'
    outputs:
      directories: ${{ steps.dirs.outputs.directories }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21
      - name: setup revive
        run: go install github.com/mgechev/revive@latest
      - name: setup staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@2023.1.4
      - name: Get directories for evaluation
        id: dirs
        run: |
          DIRS=$(python3 .github/workflows/get-dirs.py)
          echo "directories=$DIRS" >> $GITHUB_OUTPUT

  precommit:
    name: Runs pre-commit
    runs-on: ubuntu-latest
    needs: getDirs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: pre-commit/action@v3.0.0

  build:
    name: Test and build
    runs-on: ubuntu-latest
    needs: getDirs
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.getDirs.outputs.directories) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        if: steps.changes.outputs.src== 'true'
        run: |
          cd ${{ matrix.directory }}
          go build -v .
      - name: Test
        if: steps.changes.outputs.src== 'true'
        run: |
          cd ${{ matrix.directory }}
          go test -v ./... -cover
